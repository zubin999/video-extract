# Worker image: includes ffmpeg and CPU whisper runtime
FROM rust:1.82-bookworm as builder
WORKDIR /app

# Build deps for whisper/bindgen
RUN apt-get update && apt-get install -y --no-install-recommends \
      clang libclang-dev pkg-config build-essential cmake && \
    rm -rf /var/lib/apt/lists/*
ENV LIBCLANG_PATH=/usr/lib/llvm-14/lib

# Cache deps
COPY Cargo.toml Cargo.lock /app/
RUN mkdir -p src && echo "fn main() {}" > src/main.rs && \
    cargo build --release && rm -rf src

# Build
COPY . /app
RUN cargo build --release

# Runtime
FROM debian:bookworm-slim
WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
      ca-certificates tzdata ffmpeg curl libstdc++6 && \
    rm -rf /var/lib/apt/lists/*

# Non-root user
RUN useradd -m -u 10001 appuser

COPY --from=builder /app/target/release/rs-whisper /app/rs-whisper
COPY ./scripts/fetch_model.sh /app/scripts/fetch_model.sh
RUN chmod +x /app/scripts/fetch_model.sh

ENV ROLE=worker \
    DATA_DIR=/app/data \
    QUEUE_NAME=video_tasks \
    REDIS_URL=redis://redis:6379 \
    WHISPER_MODEL=small \
    RUST_LOG=debug

RUN mkdir -p /app/data /app/models && chown -R appuser:appuser /app
USER appuser

# ENTRYPOINT ["/bin/bash", "-lc"]
CMD ["/app/rs-whisper"]
